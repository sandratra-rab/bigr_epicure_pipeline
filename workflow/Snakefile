
include: "rules/common.smk"
# Genome reference data acquisition (if user did not
# provide any genomic reference in configuration file)
include: "rules/reference/download_genome_annotation.smk"
include: "rules/reference/download_genome_sequence.smk"
include: "rules/indexing/bowtie2_index.smk"
include: "rules/indexing/samtools_faidx.smk"
include: "rules/reference/download_fastq_screen_index.smk"
include: "rules/reference/download_blacklist.smk"
# Trimming
include: "rules/trimming/fastp.smk"
# Library quality controls
include: "rules/trimming/fastq_screen.smk"
# Mapping
include: "rules/mapping/bowtie2_mapping.smk"
include: "rules/mapping/sambamba_samtools_filters.smk"
include: "rules/mapping/sambamba_markdup.smk"
include: "rules/mapping/deeptools_shift.smk"
include: "rules/mapping_qc/picard_collect_mutiple_metrics.smk"
include: "rules/mapping_qc/samtools.smk"
include: "rules/mapping/samtools_cram.smk"
include: "rules/medips/bam_import.smk"
# Peak-Calling
include: "rules/peak-calling/macs2_callpeak.smk"
# Coverage
include: "rules/coverage/deeptools_bamcoverage.smk"
include: "rules/coverage/deeptools_matrix.smk"
include: "rules/coverage/deeptools_plot_heatmap.smk"
include: "rules/mapping_qc/deeptools_fingerprint.smk"
include: "rules/coverage/csaw_count.smk"
include: "rules/coverage/medips_meth.smk"
# Differential binding
include: "rules/differential_binding/csaw_db.smk"
include: "rules/differential_binding/medips_edger.smk"
# QC aggregation
include: "rules/multiqc/multiqc_mapping.smk"
include: "rules/multiqc/multiqc_trimming.smk"
# Annotation
include: "rules/annotation/chipseeker_peak_annotate.smk"
include: "rules/annotation/chipseeker_tagmatrix.smk"
include: "rules/annotation/chipseeker_plot_distance_to_tss.smk"
include: "rules/annotation/chipseeker_plot_annobar.smk"
include: "rules/annotation/chipseeker_plot_upsetvenn.smk"
include: "rules/annotation/chipseeker_genebody.smk"
include: "rules/annotation/chipseeker_genomecov.smk"
# Oxidip
include: "rules/mapping/deeptools_gc_bias.smk"
include: "rules/indexing/fasta_to_twobit.smk"



rule target:
    input:
        **targets(),
